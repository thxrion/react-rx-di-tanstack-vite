/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./app/__root"

// Create Virtual Routes

const SignUpLazyImport = createFileRoute("/sign-up")()
const SignInLazyImport = createFileRoute("/sign-in")()
const PrivateLazyImport = createFileRoute("/private")()
const AboutLazyImport = createFileRoute("/about")()
const IndexLazyImport = createFileRoute("/")()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: "/sign-up",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./app/sign-up.lazy").then((d) => d.Route))

const SignInLazyRoute = SignInLazyImport.update({
  path: "/sign-in",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./app/sign-in.lazy").then((d) => d.Route))

const PrivateLazyRoute = PrivateLazyImport.update({
  path: "/private",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./app/private.lazy").then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: "/about",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./app/about.lazy").then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./app/index.lazy").then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/about": {
      id: "/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    "/private": {
      id: "/private"
      path: "/private"
      fullPath: "/private"
      preLoaderRoute: typeof PrivateLazyImport
      parentRoute: typeof rootRoute
    }
    "/sign-in": {
      id: "/sign-in"
      path: "/sign-in"
      fullPath: "/sign-in"
      preLoaderRoute: typeof SignInLazyImport
      parentRoute: typeof rootRoute
    }
    "/sign-up": {
      id: "/sign-up"
      path: "/sign-up"
      fullPath: "/sign-up"
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute
  "/about": typeof AboutLazyRoute
  "/private": typeof PrivateLazyRoute
  "/sign-in": typeof SignInLazyRoute
  "/sign-up": typeof SignUpLazyRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute
  "/about": typeof AboutLazyRoute
  "/private": typeof PrivateLazyRoute
  "/sign-in": typeof SignInLazyRoute
  "/sign-up": typeof SignUpLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexLazyRoute
  "/about": typeof AboutLazyRoute
  "/private": typeof PrivateLazyRoute
  "/sign-in": typeof SignInLazyRoute
  "/sign-up": typeof SignUpLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/about" | "/private" | "/sign-in" | "/sign-up"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/about" | "/private" | "/sign-in" | "/sign-up"
  id: "__root__" | "/" | "/about" | "/private" | "/sign-in" | "/sign-up"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  PrivateLazyRoute: typeof PrivateLazyRoute
  SignInLazyRoute: typeof SignInLazyRoute
  SignUpLazyRoute: typeof SignUpLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  PrivateLazyRoute: PrivateLazyRoute,
  SignInLazyRoute: SignInLazyRoute,
  SignUpLazyRoute: SignUpLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/private",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/private": {
      "filePath": "private.lazy.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.lazy.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
